{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bandit",
	"patterns": [
		{
			"include": "#keyword"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#string"
		},
		{
			"name": "comment.line.number-sign.bandit",
			"match": "#.*"
		},
		{
			"name": "entity.name.function.effect.bandit",
			"match": "\\b[a-z][a-zA-Z0-9_]*\\b\\?"
		},
		{
			"name": "entity.name.type.data.bandit",
			"match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
		},
		{
			"name": "entity.name.type.lifetime.bandit",
			"match": "\\b'[a-z][a-zA-Z0-9_]*\\b"
		},
		{
			"name": "variable.other.bandit",
			"match": "\\b[a-z][a-zA-Z0-9_]*\\b"
		}
	],
	"repository": {
		"keyword": {
			"patterns": [
				{
					"name": "keyword.control.bandit",
					"match": "\\b(break|case|continue|else|if|loop|of|return|then|while)\\b"
				},
				{
					"name": "keyword.operator.bandit",
					"match": "\\b(and|not|or)\\b"
				},
				{
					"name": "keyword.other.bandit",
					"match": "\\b(data|do|embody|forall|from|let|private|public|trait|type|use|where)\\b"
				}
			]
		},
		"string": {
			"name": "string.quoted.double.bandit",
			"patterns": [
				{
					"comment": "double-quoted strings and byte strings",
					"name": "string.quoted.double.bandit",
					"begin": "(\")",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.bandit"
						}
					},
					"end": "(\")",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.bandit"
						}
					},
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				},
				{
					"comment": "double-quoted raw strings",
					"name": "string.quoted.other.raw.bandit",
					"begin": "(\\$*)`",
					"end": "`\\1"
				}
			]
		},
		"escapes": {
			"comment": "escapes: ASCII, byte, Unicode, quote, regex",
			"name": "constant.character.escape.bandit",
			"match": "(\\\\)(?:(?:(x[0-7][\\da-fA-F])|(u(\\{)[\\da-fA-F]{4,6}(\\}))|.))",
			"captures": {
				"1": {
					"name": "constant.character.escape.backslash.bandit"
				},
				"2": {
					"name": "constant.character.escape.bit.bandit"
				},
				"3": {
					"name": "constant.character.escape.unicode.bandit"
				},
				"4": {
					"name": "constant.character.escape.unicode.punctuation.bandit"
				},
				"5": {
					"name": "constant.character.escape.unicode.punctuation.bandit"
				}
			}
		}
	},
	"scopeName": "source.bandit"
}