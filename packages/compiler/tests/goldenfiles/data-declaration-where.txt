ParseResult {
    output: Some(
        AST {
            items: [
                Data(
                    Data {
                        declaration: DataDeclaration {
                            name: Identifier {
                                name: "MyType",
                                span: 5..11,
                            },
                            parameters: [
                                TypeParameter {
                                    name: Identifier {
                                        name: "a",
                                        span: 12..13,
                                    },
                                    kind: None,
                                    parentheses: 0,
                                },
                                TypeParameter {
                                    name: Identifier {
                                        name: "b",
                                        span: 17..18,
                                    },
                                    kind: Some(
                                        TypeExpression {
                                            expression: Parenthesized(
                                                Variable(
                                                    Identifier {
                                                        name: "Type",
                                                        span: 22..26,
                                                    },
                                                ),
                                            ),
                                            where_clause: WhereClause(
                                                [],
                                            ),
                                        },
                                    ),
                                    parentheses: 3,
                                },
                                TypeParameter {
                                    name: Identifier {
                                        name: "c",
                                        span: 32..33,
                                    },
                                    kind: Some(
                                        TypeExpression {
                                            expression: BinaryOperator {
                                                name: Named(
                                                    Operator {
                                                        name: "->",
                                                        span: 41..43,
                                                    },
                                                ),
                                                left: Variable(
                                                    Identifier {
                                                        name: "Type",
                                                        span: 36..40,
                                                    },
                                                ),
                                                right: BinaryOperator {
                                                    name: Named(
                                                        Operator {
                                                            name: "->",
                                                            span: 49..51,
                                                        },
                                                    ),
                                                    left: Variable(
                                                        Identifier {
                                                            name: "Type",
                                                            span: 44..48,
                                                        },
                                                    ),
                                                    right: Variable(
                                                        Identifier {
                                                            name: "Type",
                                                            span: 52..56,
                                                        },
                                                    ),
                                                },
                                            },
                                            where_clause: WhereClause(
                                                [
                                                    BinaryOperator {
                                                        name: Named(
                                                            Operator {
                                                                name: "==",
                                                                span: 65..67,
                                                            },
                                                        ),
                                                        left: Variable(
                                                            Identifier {
                                                                name: "a",
                                                                span: 63..64,
                                                            },
                                                        ),
                                                        right: Variable(
                                                            Identifier {
                                                                name: "b",
                                                                span: 68..69,
                                                            },
                                                        ),
                                                    },
                                                    BinaryOperator {
                                                        name: Named(
                                                            Operator {
                                                                name: "==",
                                                                span: 73..75,
                                                            },
                                                        ),
                                                        left: Variable(
                                                            Identifier {
                                                                name: "b",
                                                                span: 71..72,
                                                            },
                                                        ),
                                                        right: Variable(
                                                            Identifier {
                                                                name: "c",
                                                                span: 76..77,
                                                            },
                                                        ),
                                                    },
                                                    BinaryOperator {
                                                        name: Apply,
                                                        left: Variable(
                                                            Identifier {
                                                                name: "Ord",
                                                                span: 79..82,
                                                            },
                                                        ),
                                                        right: Variable(
                                                            Identifier {
                                                                name: "a",
                                                                span: 83..84,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            ),
                                        },
                                    ),
                                    parentheses: 1,
                                },
                            ],
                            where_clause: WhereClause(
                                [],
                            ),
                        },
                        constructors: VisibilityItems {
                            visibility: Public,
                            items: [
                                TypeConstructor {
                                    name: Identifier {
                                        name: "X",
                                        span: 94..95,
                                    },
                                    parameters: [
                                        Parameter {
                                            name: Some(
                                                Identifier {
                                                    name: "item",
                                                    span: 99..103,
                                                },
                                            ),
                                            typ: TypeExpression {
                                                expression: Variable(
                                                    Identifier {
                                                        name: "Int",
                                                        span: 106..109,
                                                    },
                                                ),
                                                where_clause: WhereClause(
                                                    [],
                                                ),
                                            },
                                        },
                                    ],
                                },
                            ],
                        },
                    },
                ),
            ],
        },
    ),
    errs: [],
}